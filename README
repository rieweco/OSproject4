README FILE

Cody Riewerts

GIT Repository:
https://github.com/rieweco/OSproject4.git


type make
RUN: ./oss
HELP: ./oss -h

output goes to file named 'logfile' 
the name of logfile can be changed using -l command


-----------------------------------
# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
#
# Committer: Cody Riewerts <o2-riewerts@hoare7.cs.umsl.edu>
#
# On branch master
# Changes to be committed:
#   (use "git reset HEAD <file>..." to unstage)
#
#       new file:   oss.c
#       new file:   queue.c
#
-----------------------------------

# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
#
# Committer: Cody Riewerts <o2-riewerts@hoare7.cs.umsl.edu>
#
# On branch master
# Changes to be committed:
#   (use "git reset HEAD <file>..." to unstage)
#
#       modified:   README
#       new file:   child.c
#       new file:   node.h
#       new file:   oss
#       modified:   oss.c
#       deleted:    queue.c
___________________________________

inserted slave.c
updated shared memory code for 2 separate keys
one for pcb and one for clock
set up sharememory access in slave.c

-----------------------------------
added functions to roll rand() for runtime/start/stop/isBlockable/priority values
printing out values for first rolls for testing
also added loops for spawning slave processes. 
-----------------------------------
updated lcb struct for additional properties. 
created executable oss for testing. ran into seg fault error, corrected.
issue: pcb is in shared mem, but when forking, need to figure out
whether to fork() the pcb segment or fork in local mem and addfeatures of that 
process to the next pcb spot.
continuing work...
----------------------------------
updated shared memory -- able to change data fine, and created pcb array in shared mem.
created slave array in local memory to hold the actual processes, while pcb just holds data. 
created makefile -- working
going to test updating clock
----------------------------------
almost all finished, message queue needs some adjustment in order to pass the right info
need to change the send/rcv functions and probably the Message struct to pass the right info.
finishing tomorrow
----------------------------------
updated loops. need to adjust time for spawning processes so it doesnt lock while time is too short. 
also need to add logfile operations. 
almost done
----------------------------------
project finished.
./oss will run program
saves output to log file
3 successful runs in a row.
submitting project
---------------------------------
---------------------------------







